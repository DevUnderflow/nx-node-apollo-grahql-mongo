{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///./apps/api/src/environments/environment.prod.ts","webpack:///external \"type-graphql\"","webpack:///external \"@typegoose/typegoose\"","webpack:///./apps/api/src/app/entity/user.ts","webpack:///external \"mongoose\"","webpack:///external \"typedi\"","webpack:///external \"class-validator\"","webpack:///./apps/api/src/app/services/user.service.ts","webpack:///external \"cors\"","webpack:///./apps/api/src/app/modules/User/user.resolver.ts","webpack:///./apps/api/src/app/index.ts","webpack:///./apps/api/src/app/loaders/index.ts","webpack:///./apps/api/src/app/loaders/apollo.loader.ts","webpack:///external \"dotenv\"","webpack:///external \"apollo-server-express\"","webpack:///./apps/api/src/app/modules/index.ts","webpack:///./apps/api/src/app/middlewares/isAuthenticated.ts","webpack:///./apps/api/src/app/middlewares/typegoose.middleware.ts","webpack:///external \"apollo-server-cache-redis\"","webpack:///./apps/api/src/app/loaders/mongoose.loader.ts","webpack:///./apps/api/src/app/loaders/dependencyInjector.ts","webpack:///./apps/api/src/app/entity/index.ts","webpack:///external \"cookie-parser\"","webpack:///external \"express\"","webpack:///./apps/api/src/app/loaders/seedDB.ts","webpack:///./apps/api/src/main.ts","webpack:///external \"reflect-metadata\"","webpack:///external \"apollo-cache-control\"","webpack:///external \"readline\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","module.exports = require(\"tslib\");","import dotenv from 'dotenv';\nconst env = dotenv.config();\nif (!env) {\n  throw new Error('Env not found!');\n}\nexport const environment = {\n  __pord__: process.env.NODE_ENV === 'production',\n  port: process.env.PORT as unknown as number,\n  apollo_key: process.env.APOLLO_KEY,\n  apollo_graph_variant: process.env.APOLLO_GRAPH_VARIANT,\n  redis_port: process.env.REDIS_PORT as unknown as number,\n  redis_host: process.env.REDIS_HOST,\n  mongo_url: process.env.MONGO_URL,\n};\n","module.exports = require(\"type-graphql\");","module.exports = require(\"@typegoose/typegoose\");","import { prop, getModelForClass, modelOptions, Severity} from '@typegoose/typegoose';\nimport { Field, ObjectType } from \"type-graphql\";\nimport { IsEmail , Length } from 'class-validator';\n\n@modelOptions({ options: { allowMixed : Severity.ALLOW} })\n@ObjectType()\nexport class User {\n  @Field()\n  readonly _id: string;\n\n  @Field()\n  @prop()\n  public name: string;\n\n  @Field()\n  @prop()\n  public username: string;\n\n  @Field()\n  @IsEmail()\n  @prop()\n  public email: string;\n\n  @prop({ type: String })\n  public password!: string;\n\n  @Field()\n  @Length(1, 255)\n  @prop({ default: null })\n  public bio: string;\n}\nexport const UserModel = getModelForClass(User, { schemaOptions: { timestamps: true } });\n","module.exports = require(\"mongoose\");","module.exports = require(\"typedi\");","module.exports = require(\"class-validator\");","import { Service, Inject } from \"typedi\";\n\n/**\n * User Service\n *  - All the core logic & database request resides here. \n */\n@Service()\nexport class UserService {\n  /**\n   * All the database models required are injected from container. \n   * @param UserModel \n   */\n  constructor(@Inject(\"userModel\") private readonly UserModel) {}\n\n  async getAll() {\n    return this.UserModel.find();\n  }\n}\n","module.exports = require(\"cors\");","import { User } from './../../entity/user';\nimport { UserService } from './../../services/user.service';\nimport {\n  Resolver,\n  Query,\n} from \"type-graphql\";\n\n@Resolver()\nexport class UserResolver {\n  constructor(\n    // constructor injection of service\n    private readonly userService: UserService,\n  ) { }\n\n  @Query(() => [User])\n  async users() {\n    return this.userService.getAll();\n  }\n}\n","import \"reflect-metadata\";\nimport intializeServer from './loaders';\nimport express, { Express } from 'express';\nimport { seedDatabase } from './loaders/seedDB';\nimport { environment } from \"../environments/environment\";\n\n/**\n * Entry Point for the server\n */\nclass StartServer {\n  #appModule :Express;\n\n  constructor() {\n    this.#appModule = express();\n\n    new Promise((resolve) => {\n      resolve(intializeServer({ app: this.#appModule}));\n    }).then(() => {\n      this.#appModule.listen({ port: environment.port }, () =>\n        console.log(`🚀 Server ready at http://localhost:${environment.port}`)\n      );\n      setTimeout(() => {\n        this.AskUserConsentForDBSeed();\n      }, 500)\n      return true;\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  private AskUserConsentForDBSeed() {\n    const askUserToSeedDB = require('readline').createInterface({\n      input: process.stdin,\n      output: process.stdout\n    });\n    askUserToSeedDB.question('\\n\\x1b[36mSeed DB with admin user?\\x1b[0m \\x1b[32m Yes \\x1b[0m or \\x1b[31m No (Enter) \\x1b[0m\\n', async response => {\n      if (response.toLowerCase().trim() === 'yes' || response.toLowerCase().trim() === 'y') {\n        const seederResponse = await seedDatabase();\n        console.log('\\x1b[32m%s\\x1b[0m',seederResponse ? 'Seeded' : false);\n      } else { console.info('\\x1b[31m%s\\x1b[0m','Seed Skipped!')}\n      askUserToSeedDB.close();\n    });\n  }\n}\n\nexport default StartServer;\n","import { intializeApolloGraphQl } from './apollo.loader';\n// import { intializeRedisServer } from './redis.loader';\nimport { intializeMongoose } from './mongoose.loader';\nimport dependencyInjectorLoader from './dependencyInjector';\nimport { Container } from 'typedi';\nimport mongoose from 'mongoose';\nimport { userModel } from '../entity';\nimport cors from 'cors';\nimport cookieParser from 'cookie-parser';\nimport { environment } from '../../environments/environment';\n\n/**\n * Configure server props\n * @param app: Express Instance\n */\nconst intializeServer = async ({app}) => {\n\n  /**\n   * Enable CORS midlleware in production.\n   */\n  if (environment.__pord__) {\n    app.use(cors({\n      origin: 'YOUR_CLIENT_URL', //change with your own client URL\n      credentials: true\n    }))\n  } else {\n    app.use(cors());\n  }\n  app.use(cookieParser())\n\n  /**\n   * Intialize Redis Server and flush data at start.\n   */\n  // const redis = await intializeRedisServer();\n  // await redis.flushall();\n\n  /**\n   * Intialize Mongoose Instance.\n   */\n  await intializeMongoose();\n\n  /**\n   * Intialize Dependency Injection\n   */\n  await dependencyInjectorLoader({\n    Container,\n    entities: [userModel]\n  });\n\n  /**\n   * Intialize Apollo GrapQL Server.\n   */\n  const apolloServer = await intializeApolloGraphQl({Container });\n  apolloServer.applyMiddleware({ app });\n\n  /**\n   * Set Mongoose trace to true in production.\n   */\n  if (!environment.__pord__) {\n    mongoose.set('debug', true);\n  }\n}\n\nexport default intializeServer;\n","import { environment } from './../../environments/environment';\nimport { ApolloServer } from \"apollo-server-express\";\nimport { buildSchema } from \"type-graphql\";\nimport { UserResolver } from '../modules';\nimport { authChecker } from '../middlewares/isAuthenticated';\nimport { TypegooseMiddleware } from '../middlewares/typegoose.middleware';\nimport { RedisCache } from 'apollo-server-cache-redis';\nimport 'apollo-cache-control';\n/**\n * Configure Apollo Server\n * @param redis\n * @param Container\n */\nexport const intializeApolloGraphQl = async ({ Container }) => {\n  return new ApolloServer({\n    schema: await buildSchema({\n      resolvers: [UserResolver],\n      authChecker,\n      globalMiddlewares: [TypegooseMiddleware],\n      emitSchemaFile: {\n        path: __dirname + \"/schema.gql\",\n        commentDescriptions: true,\n        sortedSchema: false,\n      },\n      container: Container,\n    }),\n    context: ({ req, res }) => ({\n      req,\n      res,\n    }),\n    formatResponse: (response) => {\n      return { ...response };\n    },\n    cache: new RedisCache({\n      port: environment.redis_port,\n      host: environment.redis_host,\n    }),\n    cacheControl: {\n      defaultMaxAge: 5,\n    },\n    apollo: {\n      key: environment.apollo_key,\n      graphVariant: environment.apollo_graph_variant,\n    },\n    playground: !environment.__pord__,\n    tracing: true,\n  });\n}\n","module.exports = require(\"dotenv\");","module.exports = require(\"apollo-server-express\");","import { UserResolver } from './User/user.resolver';\nexport { UserResolver };\n","import { AuthChecker } from \"type-graphql\";\r\n// import { AuthenticationError } from 'apollo-server-express';\r\nimport { Request, Response } from 'express';\r\n\r\n/**\r\n * Authentication Middleware \r\n */\r\nexport const authChecker: AuthChecker<{ req: Request, res: Response }> = (graphqlPayload) => {\r\n  /**\r\n   *\r\n   *  - Check authentication header for user token\r\n   *  - Example \r\n   *      if (graphqlPayload.context.req.headers.authentication) {\r\n   *        //verify token from other service like JWT \r\n   *        if(error) throw new AuthenticationError('Access denied! You need to Login');\r\n   *        return true;\r\n   *      }\r\n   */\r\n\r\n  return true;\r\n};\r\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Model, Document } from \"mongoose\";\nimport { getClassForDocument } from \"@typegoose/typegoose\";\nimport { MiddlewareFn } from \"type-graphql\";\n\nexport const TypegooseMiddleware: MiddlewareFn = async (_, next) => {\n  const result = await next();\n\n  if (Array.isArray(result)) {\n    return result.map(item => (item instanceof Model ? convertDocument(item) : item));\n  }\n\n  if (result instanceof Model) {\n    return convertDocument(result);\n  }\n\n  return result;\n};\n\nfunction convertDocument(doc: Document) {\n  const convertedDocument = doc.toObject();\n  const DocumentClass = getClassForDocument(doc)!;\n  Object.setPrototypeOf(convertedDocument, DocumentClass.prototype);\n  return convertedDocument;\n}\n","module.exports = require(\"apollo-server-cache-redis\");","import mongoose from \"mongoose\";\nimport { environment } from \"../../environments/environment\";\n\nexport const intializeMongoose = async () => {\n  try {\n    return await mongoose.connect(environment.mongo_url, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    });\n  } catch (e) {\n    throw new Error('Mongoose Error');\n  }\n}\n","/**\n * Dependency Injector\n *  - Inject all the necessary components like database mondels , any external library instance.\n */\nexport default ({ Container, entities }: { Container; entities: { name: string; model }[] }) => {\n  try {\n    entities.forEach(m => {\n      Container.set(m.name, m.model);\n    });\n    return true;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n","import { User, UserModel } from './user';\n\nexport const userModel = {name: 'userModel',model: UserModel};\nexport const Models = { UserModel };\nexport  { User };\n","module.exports = require(\"cookie-parser\");","module.exports = require(\"express\");","import { User, UserModel } from \"../entity/user\";\n\n/**\n * ? Use this file to insert Dummy data into database\n * ! You will be prompted at cmd to seed the database.\n */\nexport async function seedDatabase() {\n  const User = new UserModel({\n    name : \"Test\",\n    username: \"test09\",\n    email: \"test@github.com\",\n    password: \"test09\",\n    bio: `Full Stack Developer 🚀 and Designer 📟 with a penchant for minimalistic design and Web Technologies 🕸️. I am passionate about enhancing user experience and maximizing user interface. I have hands-on experience in building Web Applications and API's, JavaScript frameworks, including performance, scalable, efficient and maintainable products 👨‍💻.`,\n  } as User);\n  await User.save();\n\n  return true\n}\n","/**\n * For Typegraphql & Typegoose Exmaples\n * https://github.com/MichalLytek/type-graphql/tree/master/examples\n *\n * For Redis GUI use\n * redis-commander - https://www.npmjs.com/package/redis-commander\n */\n\nimport startServer from './app';\nnew startServer();\n","module.exports = require(\"reflect-metadata\");","module.exports = require(\"apollo-cache-control\");","module.exports = require(\"readline\");"],"sourceRoot":""}